[{"C:\\Users\\Bhakti\\Desktop\\Portofolio\\AvanaTest\\avana\\src\\index.js":"1","C:\\Users\\Bhakti\\Desktop\\Portofolio\\AvanaTest\\avana\\src\\reportWebVitals.js":"2","C:\\Users\\Bhakti\\Desktop\\Portofolio\\AvanaTest\\avana\\src\\App.js":"3","C:\\Users\\Bhakti\\Desktop\\Portofolio\\AvanaTest\\avana\\src\\store\\index.js":"4","C:\\Users\\Bhakti\\Desktop\\Portofolio\\AvanaTest\\avana\\src\\components\\MenuDrawer.js":"5","C:\\Users\\Bhakti\\Desktop\\Portofolio\\AvanaTest\\avana\\src\\store\\reducers\\index.js":"6","C:\\Users\\Bhakti\\Desktop\\Portofolio\\AvanaTest\\avana\\src\\store\\types\\index.js":"7","C:\\Users\\Bhakti\\Desktop\\Portofolio\\AvanaTest\\avana\\src\\store\\actions\\index.js":"8","C:\\Users\\Bhakti\\Desktop\\Portofolio\\AvanaTest\\avana\\src\\components\\MainContainer.js":"9","C:\\Users\\Bhakti\\Desktop\\Portofolio\\AvanaTest\\avana\\src\\components\\MainContent.js":"10"},{"size":623,"mtime":1608047149209,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":378,"mtime":1608032721508,"results":"14","hashOfConfig":"12"},{"size":357,"mtime":1608003455659,"results":"15","hashOfConfig":"12"},{"size":8724,"mtime":1608190020306,"results":"16","hashOfConfig":"12"},{"size":1680,"mtime":1608084346461,"results":"17","hashOfConfig":"12"},{"size":45,"mtime":1608005295770,"results":"18","hashOfConfig":"12"},{"size":186,"mtime":1608034910105,"results":"19","hashOfConfig":"12"},{"size":2329,"mtime":1608190003396,"results":"20","hashOfConfig":"12"},{"size":9782,"mtime":1608190252883,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"nyqvbi",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Bhakti\\Desktop\\Portofolio\\AvanaTest\\avana\\src\\index.js",[],["44","45"],"C:\\Users\\Bhakti\\Desktop\\Portofolio\\AvanaTest\\avana\\src\\reportWebVitals.js",[],"C:\\Users\\Bhakti\\Desktop\\Portofolio\\AvanaTest\\avana\\src\\App.js",[],"C:\\Users\\Bhakti\\Desktop\\Portofolio\\AvanaTest\\avana\\src\\store\\index.js",[],"C:\\Users\\Bhakti\\Desktop\\Portofolio\\AvanaTest\\avana\\src\\components\\MenuDrawer.js",["46","47","48","49","50","51"],"C:\\Users\\Bhakti\\Desktop\\Portofolio\\AvanaTest\\avana\\src\\store\\reducers\\index.js",["52","53"],"import { SET_MENU_LIST } from './../types/index';\r\n\r\n\r\nconst initialState = {\r\n    listMenu: [],\r\n}\r\n\r\n/**\r\n * note that mapping variable in reducers to handle the nested object update\r\n * is one of the solution. There is also a library to handle this problem but not necessarily needed for the sake of reducing the use of libraries in this project\r\n * \r\n * doing this solution could impact on several factor, e.q. performance & the rule of redux (*reducers should be flattened)\r\n * \r\n */\r\n\r\nexport const reducers = (state = initialState, action) => {\r\n    const { payload, type } = action\r\n    switch (type) {\r\n        case SET_MENU_LIST:\r\n            return {\r\n                ...state,\r\n                listMenu: payload.map(menu => {\r\n                    if(menu.childs){\r\n                        menu.childs.map(firstChild => {\r\n                            if(firstChild.childs){\r\n                                firstChild.childs.map(secondChild => {\r\n                                    if(secondChild.childs){\r\n                                        secondChild.childs.map(thirdChild => {\r\n                                            return thirdChild\r\n                                        })\r\n                                    } else {\r\n                                        return secondChild\r\n                                    }\r\n                                })\r\n                            } else {\r\n                                return firstChild\r\n                            }\r\n                        })\r\n                    } \r\n                    return menu\r\n                })\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\Bhakti\\Desktop\\Portofolio\\AvanaTest\\avana\\src\\store\\types\\index.js",[],"C:\\Users\\Bhakti\\Desktop\\Portofolio\\AvanaTest\\avana\\src\\store\\actions\\index.js",[],"C:\\Users\\Bhakti\\Desktop\\Portofolio\\AvanaTest\\avana\\src\\components\\MainContainer.js",[],"C:\\Users\\Bhakti\\Desktop\\Portofolio\\AvanaTest\\avana\\src\\components\\MainContent.js",["54","55","56","57","58","59","60","61","62"],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":1,"column":18,"nodeType":"69","messageId":"70","endLine":1,"endColumn":21},{"ruleId":"67","severity":1,"message":"71","line":2,"column":30,"nodeType":"69","messageId":"70","endLine":2,"endColumn":42},{"ruleId":"72","severity":1,"message":"73","line":92,"column":55,"nodeType":"74","messageId":"75","endLine":92,"endColumn":57},{"ruleId":"72","severity":1,"message":"73","line":98,"column":83,"nodeType":"74","messageId":"75","endLine":98,"endColumn":85},{"ruleId":"72","severity":1,"message":"73","line":104,"column":107,"nodeType":"74","messageId":"75","endLine":104,"endColumn":109},{"ruleId":"72","severity":1,"message":"73","line":110,"column":131,"nodeType":"74","messageId":"75","endLine":110,"endColumn":133},{"ruleId":"72","severity":1,"message":"73","line":24,"column":52,"nodeType":"74","messageId":"75","endLine":24,"endColumn":54},{"ruleId":"72","severity":1,"message":"73","line":26,"column":67,"nodeType":"74","messageId":"75","endLine":26,"endColumn":69},{"ruleId":"72","severity":1,"message":"76","line":28,"column":33,"nodeType":"74","messageId":"77","endLine":28,"endColumn":35},{"ruleId":"72","severity":1,"message":"73","line":30,"column":47,"nodeType":"74","messageId":"75","endLine":30,"endColumn":49},{"ruleId":"72","severity":1,"message":"76","line":42,"column":33,"nodeType":"74","messageId":"77","endLine":42,"endColumn":35},{"ruleId":"72","severity":1,"message":"76","line":44,"column":47,"nodeType":"74","messageId":"77","endLine":44,"endColumn":49},{"ruleId":"72","severity":1,"message":"73","line":46,"column":56,"nodeType":"74","messageId":"75","endLine":46,"endColumn":58},{"ruleId":"72","severity":1,"message":"76","line":60,"column":33,"nodeType":"74","messageId":"77","endLine":60,"endColumn":35},{"ruleId":"72","severity":1,"message":"76","line":62,"column":47,"nodeType":"74","messageId":"77","endLine":62,"endColumn":49},{"ruleId":"72","severity":1,"message":"76","line":64,"column":56,"nodeType":"74","messageId":"77","endLine":64,"endColumn":58},{"ruleId":"72","severity":1,"message":"73","line":66,"column":67,"nodeType":"74","messageId":"75","endLine":66,"endColumn":69},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"no-unused-vars","'Col' is defined but never used.","Identifier","unusedVar","'UserOutlined' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.map() expects a return value from arrow function.","expectedInside","no-global-assign","no-unsafe-negation"]